<partial name="_CategoriaModal"></partial>
<partial name="_SubcategoriaModal"></partial>

@using (Html.VueTemplate())
{
    <script type="text/html" id="template-categoria-cadastro-tree-list">

        <div class="container">

            <div class="d-flex justify-content-between align-items-end mt-3">
                <h5>Categorias de {{titulo}}</h5>
                <button class="btn btn-primary px-4" data-bs-toggle="modal" data-bs-target="#categoriaModal"><span class="sys-fg-dark-3 fw-bold">Novo</span></button>
            </div>
        </div>

        <ul class="list-group list-group-cat mt-3">

            <li class="list-group-item" v-for="c in lista">

                <div class="categoria-item">
                    <div class="descricao">
                        <div class="d-flex align-items-center">
                            <i class="fa-solid sys-fg-dark-4"
                           v-bind:class="[c.esconder ? 'fa-square-plus' : 'fa-square-minus']"
                               v-on:click="toggleCategoria(c)"></i>
                            <div class="fw-bold ms-2">{{c.nome}}</div>
                        </div>
                    </div>
                    <div class="ordem">{{c.ordem}}</div>
                    <div class="opcoes">
                        <button type="button" class="btn sys-icon-button" title="Adicionar Subcategoria"><i aria-hidden="true" class="fa-solid fa-folder-tree sys-fg-dark-2"></i></button>
                        <button type="button" class="btn sys-icon-button" title="Editar"><i aria-hidden="true" class="fa-solid fa-pen sys-fg-dark-2"></i></button>
                    </div>
                </div>

                <ul class="list-group list-group-flush list-group-subcat" v-if="c.subcategorias.length > 0 && !c.esconder">
                    <li class="list-group-item" v-for="s in c.subcategorias">
                        <div class="categoria-item">
                            <div class="descricao">
                                <div class="d-flex align-items-center">
                                    <div class="">{{s.nome}}</div>
                                </div>
                            </div>
                            <div class="ordem"><span v-if="s.ordem">{{c.ordem ? c.ordem : '_'}}.{{s.ordem}}</span></div>
                            <div class="opcoes">
                                <button type="button" class="btn sys-icon-button" title="Editar"><i aria-hidden="true" class="fa-solid fa-pen sys-fg-dark-2"></i></button>
                            </div>
                        </div>
                    </li>
                </ul>

            </li>

        </ul>

    </script>
}

@using (Html.VueScript())
{
    <script type="text/javascript">

        const CategoriaCadastroTreeList = {

            name: 'CategoriaCadastroTreeList',
            template: '#template-categoria-cadastro-tree-list',
            mixins: [BaseMixin],
            components: { ConfirmationDialog },

            data: () => ({
                tipo: 1,  //Enums.TipoLancamento: 1 - receita, 2 - despesa
                lista: []
            }),

            computed: {

                titulo() {
                    return this.tipo == 1 ? "Receitas" : "Despesas";
                },
            },

            mounted() {

            },

            methods: {

                async initCategoriasDespesa() {
                    this.tipo = 2; //despesa
                    await this.carregar();
                },

                async initCategoriasReceita() {
                    this.tipo = 1; //receita
                    await this.carregar();
                },

                async carregar() {

                    await this.setLoadingAndExecute(async () => {

                        let url = this.tipo == 1 ? '/categoria/ListarCategoriasReceitas' : '/categoria/ListarCategoriasDespesas';

                        let ret = await fetchData.fetchGetJson(url);

                        if (ret.ok) {
                            this.lista = ret.value;
                        }
                        else {
                            mensagemSistema.showMensagemErro(ret.message);
                        }
                    });
                },

                toggleCategoria(c) {
                    if (c.subcategorias && c.subcategorias.length > 0)
                    c.esconder = !c.esconder;
                }

            }
        }

    </script>
}

@using (Html.VueStyle())
{
    <style type="text/css">

        .list-group.list-group-cat {
            border: 0px solid green;
        }

            .list-group.list-group-cat .list-group-item {
                padding-right: 0;
                overflow: hidden;
            }

        .list-group.list-group-subcat {
            margin-top: 0.5rem;
            margin-bottom: -0.5rem;
            border-top: var(--bs-list-group-border-width) solid var(--bs-list-group-border-color);
        }

            .list-group.list-group-subcat .list-group-item {
                padding-left: 2rem;
            }


        .categoria-item {
            display: grid;
            grid-template-columns: auto 6rem 5rem;
            grid-template-areas:
                "ga-descricao ga-ordem ga-opcoes";
            align-items: center;
        }

            .categoria-item .descricao {
                grid-area: ga-descricao;
            }

            .categoria-item .ordem {
                grid-area: ga-ordem;
            }

            .categoria-item .opcoes {
                grid-area: ga-opcoes;
                margin-right: 0.5rem;
                display: flex;
                justify-content: end;
            }

        @@media (max-width: 991px) { /*lg*/
            .categoria-item {
                grid-template-columns: auto 3rem 5rem;
                grid-template-rows: 2rem;
            }
        }

    </style>
}