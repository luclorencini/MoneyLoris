<partial name="_Moeda" />
<partial name="_Pagination" />

<partial name="_LancamentoListagemFiltro"></partial>
<partial name="_LancamentoTable"></partial>

<partial name="_LancamentoWizard"></partial>
<partial name="_TransferenciaWizard"></partial>

<partial name="_LancamentoModal"></partial>
<partial name="_TransferenciaModal"></partial>

@using (Html.VueTemplate())
{
    <script type="text/html" id="template-lancamento-listagem">

        <section class="container-xxl container-titulo">
            <div class="area-titulo">
                @await Html.PartialAsync("_BotaoVoltar")
                <div class="titulo">Lançamentos</div>
            </div>
            <div class="area-opcoes">

                @await Html.PartialAsync("_BotaoLancamentoDesktop")

                <div class="d-lg-none me-2" data-bs-toggle="offcanvas" data-bs-target="#offcanvasFiltro">
                    <i class="fa-solid fa-filter fa-lg text-white"></i>
                </div>

            </div>
        </section>

        <LancamentoListagemFiltro v-on:lancamento-filtrar="pesquisar($event)"></LancamentoListagemFiltro>
        

        <template v-if="loading">
            <div class="container-xxl d-flex justify-content-center" style="animation: adm-fadein 0.5s;">
                <div class="d-flex flex-column align-items-center mt-5">
                    <i class="fa-solid fa-spinner fa-5x fa-spin"></i>
                    <div class="fs-4 mt-3">Carregando lançamentos...</div>
                </div>
            </div>
        </template>
        <template v-else>

            <section class="container-xxl lancamento-rolagem">

                <div class="card">
                    <div class="card-body p-2">
                        <div class="row g-0">

                            <div class="col col-7 d-none d-lg-block ps-2">
                                <label class="form-label">Período</label>
                                <div class="lh-1 fw-bold fs-5 text-capitalize">{{this.filtro.labelPeriodo}}</div>
                            </div>

                            <div class="col col-12 col-lg-5">

                                <div class="balanco-container">

                                    <div class="text-center">
                                        <label class="form-label">Receitas</label>
                                        <div class="valor-rec"><Moeda :valor="balanco.receitas"></Moeda></div>
                                    </div>
                                    <div class="text-center">
                                        <label class="form-label">Despesas</label>
                                        <div class="valor-desp"><Moeda :valor="balanco.despesas"></Moeda></div>
                                    </div>
                                    <div class="text-center">
                                        <label class="form-label">Balanço</label>
                                        <div class="valor-saldo"><Moeda :valor="balanco.balanco"></Moeda></div>
                                    </div>

                                </div>

                            </div>

                        </div>
                    </div>
                </div>

                <div class="list-group mt-2 mb-5">

                    <LancamentoTable v-bind:lista="lista" v-bind:totalResults="totalResults" v-on:editar-lancamento="editarLancamento($event)"></LancamentoTable>

                    <div class="list-group-item">
                        <Pagination v-if="totalResults > 0"
                        v-bind:currentPage="filtro.currentPage"
                        v-bind:resultsPerPage="filtro.resultsPerPage"
                        v-bind:totalResults="totalResults"
                        v-on:pagination-change="paginar($event)">
                        </Pagination>
                    </div>

                </div>

            </section>

        </template>

        @await Html.PartialAsync("_BotaoLancamentoMobile")


        <LancamentoWizard ref="lancWizard" v-on:lancamento-realizado="pesquisar()"></LancamentoWizard>
        <TransferenciaWizard ref="tranWizard" v-on:transferencia-realizada="pesquisar()"></TransferenciaWizard>

        <LancamentoModal ref="lancModal" v-on:lancamento-salvo="pesquisar()"></LancamentoModal>
        <TransferenciaModal ref="tranModal" v-on:transferencia-salva="pesquisar()"></TransferenciaModal>

    </script>
}

@using (Html.VueScript())
{
    <script type="text/javascript">

        const LancamentoListagem = {

            name: 'LancamentoListagem',
            template: '#template-lancamento-listagem',
            mixins: [BaseMixin],
            components: {
                Moeda, Pagination, LancamentoListagemFiltro, LancamentoTable,
                LancamentoWizard, TransferenciaWizard, LancamentoModal, TransferenciaModal
            },

            data: () => ({
                filtro: {},
                totalResults: 0,
                balanco: {},
                lista: []
            }),

            mounted() {
                //força loading true para garantir que o template de loading customizado vai entrar desde o início
                this.loading = true;
            },

            methods: {

                async pesquisar(filter) {

                    //atualiza filtro se informado
                    if (filter)
                        this.filtro = filter;

                    //reseta paginacao
                    this.filtro.currentPage = 1;
                    await this.carregar();
                },

                async paginar(paginacao) {

                    this.filtro.currentPage = paginacao.currentPage;
                    this.filtro.resultsPerPage = paginacao.resultsPerPage;
                    await this.carregar();
                },

                async carregar() {
                    await this.setLoadingAndExecute(async () => {
                        await this.obterListagem();
                        await this.obterBalanco();
                    });
                },

                async obterListagem() {

                    //ajustes
                    if (this.filtro.idMeioPagamento == '' || this.filtro.idMeioPagamento == 'null')
                        this.filtro.idMeioPagamento = null;

                    let ret = await fetchData.fetchPostJson(`/lancamento/pesquisar`, this.filtro);

                    if (ret.ok) {
                        this.totalResults = ret.value.total;
                        this.lista = ret.value.dataPage;
                    }
                    else {
                        mensagemSistema.showMensagemErro(ret.message);
                    }
                },

                async obterBalanco() {

                    let ret = await fetchData.fetchPostJson(`/lancamento/balanco`, this.filtro);

                    if (ret.ok) {
                        this.balanco = ret.value;
                    }
                    else {
                        mensagemSistema.showMensagemErro(ret.message);
                    }
                },


                novaDespesa() {
                    this.$refs.lancWizard.initDespesa();
                },

                novaReceita() {
                    this.$refs.lancWizard.initReceita();
                },

                novaTransferencia() {
                    this.$refs.tranWizard.initTransferencia();
                },

                novoPagamentoFatura() {
                    this.$refs.tranWizard.initPagamentoFatura();
                },

                editarLancamento(l) {
                    if (l.operacao == 1) { // 1 - lançamento simples, 2 - transferencia
                        this.$refs.lancModal.carregar(l.id);
                    }
                    else {
                        this.$refs.tranModal.carregar(l.idLancamentoOrigemTransferencia);
                    }
                }

            }
        }

    </script>
}

@using (Html.VueStyle())
{
    <style type="text/css">

        .balanco-container {
            display: flex;
            flex-wrap: nowrap;
            justify-content: space-evenly;
            align-items: end;
        }

            .balanco-container .valor-rec {
                font-weight: bold;
                font-size: 1.25rem;
                line-height: 1.25rem;
            }

            .balanco-container .valor-desp {
                font-weight: bold;
                font-size: 1.25rem;
                line-height: 1.25rem;
            }

            .balanco-container .valor-saldo {
                font-weight: bold;
                font-size: 1.5rem;
                line-height: 1;
            }

        @@media (max-width: 991px) { /*lg*/

            .balanco-container {
                justify-content: space-between;
                margin-bottom: 0.5rem;
            }

                .balanco-container .valor-rec {
                    font-size: 1rem;
                    line-height: 1rem;
                }

                .balanco-container .valor-desp {
                    font-size: 1rem;
                    line-height: 1rem;
                }

                .balanco-container .valor-saldo {
                    font-size: 1rem;
                    line-height: 1rem;
                }
        }



        .barra-filtro-periodo {
            display: none;
        }

        @@media (max-width: 991px) { /*lg*/

            .barra-filtro-periodo {
                padding: 0.75rem 2rem;
                background-color: var(--sys-color-menu-2);
                display: flex;
                align-items: center;
                justify-content: space-between;
                font-size: 1rem;
                font-weight: 500;
                color: #fff;
                height: 3.25rem;
            }

                .barra-filtro-periodo i {
                    font-size: 1.5rem;
                }
        }

        .lancamento-rolagem {
            padding-top: 1rem;
            padding-bottom: 2rem;
        }

        @@media (max-width: 991px) { /*lg*/
            .lancamento-rolagem {
                padding-top: unset;
            }
        }

    </style>
}