@using (Html.VueTemplate())
{
    <script type="text/html" id="template-ext-pagination">

        <div class="d-flex align-items-center me-4 my-1">
            <span class="text-nowrap me-2">Registros por página:</span>
            <select class="form-select form-select-sm" v-model="calculatedResultsPerPage" v-on:change="alterarResultsPerPage">
                <option>25</option>
                <option>50</option>
                <option>100</option>
            </select>
        </div>

        <div class="fw-bold me-3 my-1"> {{firstPageResult}} - {{lastPageResult}} de {{totalResults}}</div>
        <ul class="pagination adm-pagination">
            <li class="page-item" v-on:click="goToFirstPage()">
                <div class="page-link" aria-label="Primeiro">
                    <i class="fa-solid fa-angles-left"></i>
                </div>
            </li>
            <li class="page-item" v-on:click="goToPreviousPage()">
                <div class="page-link" aria-label="Anterior">
                    <i class="fa-solid fa-chevron-left"></i>
                </div>
            </li>

            <li class="page-item" v-on:click="goToNextPage()">
                <div class="page-link" aria-label="Próximo">
                    <i class="fa-solid fa-chevron-right"></i>
                </div>
            </li>
            <li class="page-item" v-on:click="goToLastPage()">
                <div class="page-link" aria-label="Último">
                    <i class="fa-solid fa-angles-right"></i>
                </div>
            </li>
        </ul>

    </script>
}

@using (Html.VueScript())
{
    <script type="text/javascript">

        const Pagination = {

            name: 'Pagination',
            template: '#template-ext-pagination',
            emits: ['pagination-change'],

            props: {
                currentPage: Number,
                resultsPerPage: Number,
                totalResults: Number
            },

            data: () => ({
                calculatedPage: 1,
                calculatedResultsPerPage: 25
            }),

            mounted() {

                if (this.currentPage) {
                    this.calculatedPage = this.currentPage;
                }
                if (this.resultsPerPage) {
                    this.calculatedResultsPerPage = this.resultsPerPage;
                }
            },

            computed: {

                lastPage() {
                    return Math.floor(this.totalResults / this.calculatedResultsPerPage) + (this.totalResults % this.calculatedResultsPerPage == 0 ? 0 : 1);
                },

                firstPageResult() {
                    return this.calculatedResultsPerPage * (this.calculatedPage - 1) + 1;
                },

                lastPageResult() {
                    let lastResult = this.calculatedResultsPerPage * this.calculatedPage;
                    if (lastResult > this.totalResults) {
                        return this.totalResults;
                    }
                    return lastResult;
                }
            },

            methods: {

                emiteSelecao() {
                    this.$emit('pagination-change', { currentPage: this.calculatedPage, resultsPerPage: this.calculatedResultsPerPage });
                },

                goToFirstPage() {
                    if (this.currentPage > 1) {
                        this.calculatedPage = 1;
                        this.emiteSelecao();
                    }
                },

                goToPreviousPage() {
                    if (this.currentPage > 1) {
                        this.calculatedPage = this.currentPage - 1;
                        this.emiteSelecao();
                    }
                },

                goToNextPage() {
                    if (this.currentPage < this.lastPage) {
                        this.calculatedPage = this.currentPage + 1;
                        this.emiteSelecao();
                    }
                },

                goToLastPage() {
                    if (this.currentPage < this.lastPage) {
                        this.calculatedPage = this.lastPage;
                        this.emiteSelecao();
                    }
                },

                alterarResultsPerPage() {
                    this.calculatedPage = 1;
                    this.calculatedResultsPerPage = Math.floor(this.calculatedResultsPerPage); //converte string em number
                    this.emiteSelecao();
                }

            }
        }

    </script>
}

@using (Html.VueStyle())
{
    <style type="text/css">

        .adm-pagination {
            margin-top: 0.5rem;
            margin-bottom: 0.5rem;
        }

            .adm-pagination .page-link {
                cursor: pointer;
                color: var(--adm-color-dark-2) !important;
                font-size: 0.85rem;
                font-weight: bold;
                padding: 0.5rem 1.5rem;
            }

            .adm-pagination .page-item select {
                cursor: pointer;
                color: var(--adm-color-dark-2) !important;
                font-size: 0.85rem;
                font-weight: bold;
                padding: 0.5rem 1rem;
                border: 1px solid;
                border-color: #dee2e6;
                margin-right: 1px;
            }

    </style>
}