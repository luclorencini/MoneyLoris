@using (Html.VueTemplate())
{
    <script type="text/html" id="template-moeda">

        <span v-if="mostrarValor" v-bind:class="cssClass">{{formatado}}</span>
        <span v-else class="placeholder-glow"><span class="placeholder w-100"></span></span>

    </script>
}

@using (Html.VueScript())
{
    <script type="text/javascript">

        const Moeda = {

            name: 'Moeda',
            template: '#template-moeda',
            mixins: [BaseMixin],

            props: {
                valor: Number,
                retirarCor: Boolean,
                retirarSinal: Boolean
            },

            computed: {

                mostrarValor() {
                    return (this.valor != null && this.valor != undefined);
                },

                cssClass() {
                    let css = '';

                    if (this.retirarCor) return css;

                    css = (this.valor >= 0 ? 'din-receita' : 'din-despesa');

                    return css;
                },

                formatado() {
                    if (this.valor == 0)
                        return '-';
                    else{

                        const sd = (this.retirarSinal ? 'never' : 'exceptZero');

                        let ret = Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL', signDisplay: sd })
                            .format(this.valor);

                            return ret;
                    }
                }
            }
        }

    </script>
}

@using (Html.VueStyle())
{
    @* Não há css específico deste componente *@
}